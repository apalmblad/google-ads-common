#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.6.1 on 2011-12-20 17:59:35.

require 'dfp_api/errors'

module DfpApi; module V201111; module SuggestedAdUnitService
  class SuggestedAdUnitServiceRegistry
    SUGGESTEDADUNITSERVICE_METHODS = {:get_suggested_ad_unit=>{:output=>{:fields=>[{:type=>"SuggestedAdUnit", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_suggested_ad_unit_response"}, :input=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:suggested_ad_unit_id}]}, :get_suggested_ad_units_by_statement=>{:output=>{:fields=>[{:type=>"SuggestedAdUnitPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_suggested_ad_units_by_statement_response"}, :input=>[{:type=>"Statement", :min_occurs=>0, :max_occurs=>1, :name=>:filter_statement}]}, :perform_suggested_ad_unit_action=>{:output=>{:fields=>[{:type=>"SuggestedAdUnitUpdateResult", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"perform_suggested_ad_unit_action_response"}, :input=>[{:type=>"SuggestedAdUnitAction", :min_occurs=>0, :max_occurs=>1, :name=>:suggested_ad_unit_action}, {:type=>"Statement", :min_occurs=>0, :max_occurs=>1, :name=>:filter_statement}]}}
    SUGGESTEDADUNITSERVICE_TYPES = {:Statement=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:query}, {:type=>"String_ValueMapEntry", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:values}]}, :"AdUnit.TargetWindow"=>{:fields=>[]}, :Value=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:value_type}], :abstract=>true}, :UpdateResult=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:num_changes}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:update_result_type}]}, :SuggestedAdUnitUpdateResult=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:new_ad_unit_ids}], :base=>"UpdateResult"}, :String_ValueMapEntry=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:key}, {:type=>"Value", :min_occurs=>0, :max_occurs=>1, :name=>:value}]}, :NumberValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Value"}, :TargetPlatform=>{:fields=>[]}, :AdUnitSize=>{:fields=>[{:type=>"Size", :min_occurs=>0, :max_occurs=>1, :name=>:size}, {:type=>"EnvironmentType", :min_occurs=>0, :max_occurs=>1, :name=>:environment_type}, {:type=>"AdUnitSize", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:companions}]}, :Authentication=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:authentication_type}], :abstract=>true}, :ApproveSuggestedAdUnit=>{:fields=>[], :base=>"SuggestedAdUnitAction"}, :BooleanValue=>{:fields=>[{:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Value"}, :SuggestedAdUnitAction=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:suggested_ad_unit_action_type}], :abstract=>true}, :OAuth=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:parameters}], :base=>"Authentication"}, :SoapRequestHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:network_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:application_name}, {:type=>"Authentication", :min_occurs=>0, :max_occurs=>1, :name=>:authentication}]}, :ClientLogin=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:token}], :base=>"Authentication"}, :TextValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Value"}, :SuggestedAdUnit=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:num_requests}, {:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:path}, {:type=>"AdUnit.TargetWindow", :min_occurs=>0, :max_occurs=>1, :name=>:target_window}, {:type=>"TargetPlatform", :min_occurs=>0, :max_occurs=>1, :name=>:target_platform}, {:type=>"AdUnitSize", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:suggested_ad_unit_sizes}]}, :Size=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:width}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:height}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:is_aspect_ratio}]}, :EnvironmentType=>{:fields=>[]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}]}, :SuggestedAdUnitPage=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:total_result_set_size}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:start_index}, {:type=>"SuggestedAdUnit", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:results}]}}
    SUGGESTEDADUNITSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return SUGGESTEDADUNITSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return SUGGESTEDADUNITSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return SUGGESTEDADUNITSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < DfpApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
